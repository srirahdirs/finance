{"ast":null,"code":"// Global data refresh utility\nclass DataRefreshManager {\n  constructor() {\n    this.refreshCallbacks = new Set();\n  }\n\n  // Register a component's refresh function\n  registerRefreshCallback(callback) {\n    this.refreshCallbacks.add(callback);\n  }\n\n  // Unregister a component's refresh function\n  unregisterRefreshCallback(callback) {\n    this.refreshCallbacks.delete(callback);\n  }\n\n  // Trigger refresh for all registered components\n  refreshAll() {\n    this.refreshCallbacks.forEach(callback => {\n      try {\n        callback();\n      } catch (error) {\n        console.error('Error refreshing component:', error);\n      }\n    });\n  }\n\n  // Get current timestamp for cache busting\n  getCacheBuster() {\n    return `?t=${Date.now()}`;\n  }\n}\n\n// Create singleton instance\nconst dataRefreshManager = new DataRefreshManager();\nexport default dataRefreshManager;","map":{"version":3,"names":["DataRefreshManager","constructor","refreshCallbacks","Set","registerRefreshCallback","callback","add","unregisterRefreshCallback","delete","refreshAll","forEach","error","console","getCacheBuster","Date","now","dataRefreshManager"],"sources":["C:/xampp/htdocs/loan-management-system/frontend/src/utils/dataRefresh.js"],"sourcesContent":["// Global data refresh utility\r\nclass DataRefreshManager {\r\n    constructor() {\r\n        this.refreshCallbacks = new Set();\r\n    }\r\n\r\n    // Register a component's refresh function\r\n    registerRefreshCallback(callback) {\r\n        this.refreshCallbacks.add(callback);\r\n    }\r\n\r\n    // Unregister a component's refresh function\r\n    unregisterRefreshCallback(callback) {\r\n        this.refreshCallbacks.delete(callback);\r\n    }\r\n\r\n    // Trigger refresh for all registered components\r\n    refreshAll() {\r\n        this.refreshCallbacks.forEach(callback => {\r\n            try {\r\n                callback();\r\n            } catch (error) {\r\n                console.error('Error refreshing component:', error);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Get current timestamp for cache busting\r\n    getCacheBuster() {\r\n        return `?t=${Date.now()}`;\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst dataRefreshManager = new DataRefreshManager();\r\n\r\nexport default dataRefreshManager;\r\n"],"mappings":"AAAA;AACA,MAAMA,kBAAkB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,gBAAgB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACrC;;EAEA;EACAC,uBAAuBA,CAACC,QAAQ,EAAE;IAC9B,IAAI,CAACH,gBAAgB,CAACI,GAAG,CAACD,QAAQ,CAAC;EACvC;;EAEA;EACAE,yBAAyBA,CAACF,QAAQ,EAAE;IAChC,IAAI,CAACH,gBAAgB,CAACM,MAAM,CAACH,QAAQ,CAAC;EAC1C;;EAEA;EACAI,UAAUA,CAAA,EAAG;IACT,IAAI,CAACP,gBAAgB,CAACQ,OAAO,CAACL,QAAQ,IAAI;MACtC,IAAI;QACAA,QAAQ,CAAC,CAAC;MACd,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC,CAAC;EACN;;EAEA;EACAE,cAAcA,CAAA,EAAG;IACb,OAAO,MAAMC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;EAC7B;AACJ;;AAEA;AACA,MAAMC,kBAAkB,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;AAEnD,eAAegB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}